set mouse=

"set nospell
"set nolist
map <Leader>m <C-W>\| <C-W>_

"set nu
"set cursorline     "高亮当前行
"set cursorcolumn   "高亮当前列
"highlight CursorLine   cterm=NONE ctermbg=gray ctermfg=yellow guibg=NONE guifg=NONE
"highlight CursorColumn cterm=NONE ctermbg=gray ctermfg=yellow guibg=NONE guifg=NONE
"filetype plugin indent on

"set expandtab
"set smartindent
"set tabstop=4
"set shiftwidth=4

"set tags=tags;
"set autochdir "自动设置当前目录



""""""""""""""""""""""""""""""
" Tag list (ctags)
""""""""""""""""""""""""""""""
let Tlist_Ctags_Cmd = '/usr/bin/ctags' "设定linux系统中ctags程序的位置
let Tlist_Show_One_File = 1 "不同时显示多个文件的tag，只显示当前文件的
let Tlist_Exit_OnlyWindow = 1 "如果taglist窗口是最后一个窗口，则退出vim
let Tlist_Use_Right_Window = 1  "在右侧窗口中显示taglist窗口
"let Tlist_Use_Left_Window=1
let Tlist_File_Fold_Auto_Close=1
"使用<F9>键就可以打开/关闭taglist窗口
map <silent> <F9> :TlistToggle<cr>

" NERDTree config
"使用F2键快速调出和隐藏它
map <F2> :NERDTreeToggle<CR>
"关闭vim时，如果打开的文件除了NERDTree没有其他文件时，它自动关闭
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") &&b:NERDTreeType == "primary") | q | endif
"打开vim时自动打开NERDTree
"autocmd vimenter * NERDTree


"查找C语言符号，即查找函数名、宏、枚举值等出现的地方
"nmap <C-\>s :cs find s <C-R>=expand("<cword>")<CR><CR> 
"查找函数、宏、枚举等定义的位置，类似ctags所提供的功能
"nmap <C-\>g :cs find g <C-R>=expand("<cword>")<CR><CR>
"查找调用本函数的函数
"nmap <C-\>c :cs find c <C-R>=expand("<cword>")<CR><CR>
"查找指定的字符串
"nmap <C-_>t :cs find t <C-R>=expand("<cword>")<CR><CR>
"查找egrep模式，相当于egrep功能，但查找速度快多了
"nmap <C-_>e :cs find e <C-R>=expand("<cword>")<CR><CR>
"查找并打开文件，类似vim的find功能
"nmap <C-_>f :cs find f <C-R>=expand("<cfile>")<CR><CR>
"查找包含本文件的文件
"nmap <C-_>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
"查找本函数调用的函数
"nmap <C-_>d :cs find d <C-R>=expand("<cword>")<CR><CR>
"set cscopequickfix=s-,c-,d-,i-,t-,e-
"cs add cscope.out




"TARGET='/tmp/cscope.files'
"find $1 -name "*.[h|c|cpp]" > ${TARGET}
"cd $1
"#ctags -R *
"ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .
"cscope -kbq -i ${TARGET}
